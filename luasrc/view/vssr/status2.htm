
<body>

    <div class="cbi-section" id="cbi-vssr-ip">
        <span class="panel-title"><%:Check Ip And Access%></span>
        <div class="cbi-section-node" id="cbi-vssr-ip1">
            <div class="pure-g">
                <div class="pure-u-1-2">
                    <div class="table" width="100%">
                        <div class="tr">
                            <div class="td left" width="33%">
                                <b><%:Test From Internal%></b>
                            </div>
                            <div class="td left" id="ip-ipipnet">

                            </div>
                        </div>
                        <div class="tr">
                            <div class="td left" width="33%">
                                <b><%:Test From Abroad%></b>
                            </div>
                            <div class="td left">
                                <span id="ip-ipapi" class="gap"></span><span id="ip-ipapi-geo"></span>
                            </div>
                        </div>
                        <div class="tr">
                            <div class="td left" width="33%">
                                <b><%:Test From Google%></b>
                            </div>
                            <div class="td left">
                                <span id="ip-google" class="gap"></span><span id="ip-google-geo"></span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="pure-u-1-2">
                    <div class="table" width="100%">
                        <div class="tr">
                            <div class="td left" width="33%">
                                <b><%:Baidu%></b>
                            </div>
                            <div id="http-baidu" class="td left ">

                            </div>
                        </div>
                        <div class="tr">
                            <div class="td left" width="33%">
                                <b>GitHub</b>
                            </div>
                            <div id="http-github" class="td left ">

                            </div>
                        </div>
                        <div class="tr">
                            <div class="td left" width="33%">
                                <b>YouTube</b>
                            </div>
                            <div id="http-youtube" class="td left ">

                            </div>
                        </div>
                    </div>
                </div>
                <div class="pure-u-1">
                    <div class="table" width="100%">
                        <div class="tr">
                            <div class="td">
                                <b>Powered by </b> <a style="text-decoration:none;" href="http://ip.skk.moe"
                                    target="_blank">ip.skk.moe</a> & <a style="text-decoration:none;"
                                    href="http://www.ip111.cn/" target="_blank">www.ip111.cn</a>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script>const $$ = document;

        let IP = {
            get: (url, type) =>
                fetch(url, { method: 'GET' }).then((resp) => {
                    if (type === 'text')
                        return Promise.all([resp.ok, resp.status, resp.text(), resp.headers]);
                    else {
                        return Promise.all([resp.ok, resp.status, resp.json(), resp.headers]);
                    }
                }).then(([ok, status, data, headers]) => {
                    if (ok) {
                        let json = {
                            ok,
                            status,
                            data,
                            headers
                        }
                        return json;
                    } else {
                        throw new Error(JSON.stringify(json.error));
                    }
                }).catch(error => {
                    throw error;
                }),
            parseIPIpip: (ip, elID) => {
                IP.get(`https://api.skk.moe/network/parseIp/ipip/${ip}`, 'json')
                    .then(resp => {
                        let x = '';
                        for (let i of resp.data) {
                            x += (i !== '') ? `${i} ` : '';
                        }
                        $$.getElementById(elID).innerHTML = x;
                        //$$.getElementById(elID).innerHTML = `${resp.data.country} ${resp.data.regionName} ${resp.data.city} ${resp.data.isp}`;
                    })
            },
            getIpipnetIP: () => {
                let random = parseInt(Math.random() * 100000000);
                IP.get(`https://myip.ipip.net/?z=${random}`, 'text')
                    .then((resp) => {
                        let data = resp.data.replace('当前 IP：', '').split(' 来自于：');
                        $$.getElementById('ip-ipipnet').innerHTML = `${data[0]} ${data[1]}`;
                    });
            }
        };

        let HTTP = {
            checker: (domain, cbElID) => {
                let img = new Image;
                let timeout = setTimeout(() => {
                    img.onerror = img.onload = null;
                    $$.getElementById(cbElID).innerHTML = '<span class="sk-text-error"><%:Connection Timeout%></span>'
                }, 6000);

                img.onerror = () => {
                    clearTimeout(timeout);
                    $$.getElementById(cbElID).innerHTML = '<span class="sk-text-error"><%:Cannot Access%></span>'
                }

                img.onload = () => {
                    clearTimeout(timeout);
                    $$.getElementById(cbElID).innerHTML = '<span class="sk-text-success"><%:Connection OK%></span>'
                }

                img.src = `https://${domain}/favicon.ico?${+(new Date)}`
            },
            runcheck: () => {
                HTTP.checker('www.baidu.com', 'http-baidu');
                HTTP.checker('github.com', 'http-github');
                HTTP.checker('www.youtube.com', 'http-youtube');
            }
        };


        //<![CDATA[
        XHR.poll(5, '<%=url([[admin]], [[services]], [[vssr]], [[run]])%>', null,
            function (x, data) {
                var tb = document.getElementById('vssr_status');
                var tb1 = document.getElementById('google_status');
                var tb2 = document.getElementById('baidu_status');
                var tb3 = document.getElementById('game_status');
                var tb4 = document.getElementById('pdnsd_status');
                var tb5 = document.getElementById('socks5_status');
                if (data && tb) {
                    HTTP.runcheck();
                    IP.getIpipnetIP();
                    if (data.global) {
                        tb.innerHTML = '<%:Client%><br><span class="green"><%:Running%></span>';
                    } else {
                        tb.innerHTML = '<%:Client%><br><span class="red"><%:Not Running%></span>';
                    }
                    if (data.game) {
                        tb3.innerHTML = '<%:Game Mode%><br><span class="green"><%:Running%></span>';
                    } else {
                        tb3.innerHTML = '<%:Game Mode%><br><span class="red"><%:Not Running%></span>';
                    }
                    if (data.pdnsd) {
                        tb4.innerHTML = 'PDNSD<br><span class="green"><%:Running%></span>';
                    } else {
                        tb4.innerHTML = 'PDNSD<br><span class="red"><%:Not Running%></span>';
                    }
                    if (data.socks5) {
                        tb5.innerHTML = 'SOCKS5<br><span class="green"><%:Running%></span>';
                    } else {
                        tb5.innerHTML = 'SOCKS5<br><span class="red"><%:Not Running%></span>';
                    }

                    if (data.google != "" && data.google != false) {
                        let datas = data.google.replace('<html><head><meta charset="utf-8"></head><body style="text-align: center; font-family: Helvetica,Arial,sans-serif; font-size: 14px; ">', '').replace('</body></html>', "");
                        $$.getElementById('ip-google').innerHTML = datas;
                        IP.parseIPIpip(datas, 'ip-google-geo');
                    } else {
                        $$.getElementById('ip-google').innerHTML = "<%:Unavailable%>";
                    }

                    if (data.outboard != "" && data.outboard != false) {
                        let datas = data.outboard;
                        $$.getElementById('ip-ipapi').innerHTML = datas;
                        IP.parseIPIpip(datas, 'ip-ipapi-geo');
                    } else {
                        $$.getElementById('ip-ipapi').innerHTML = "<%:Unavailable%>";
                    }
                }
            }
        );
//]]>
    </script>
</body>

</html>